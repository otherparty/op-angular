name: Open Story (stag only)

on:
  push:
    branches:
      - stag

concurrency:
  group: open-story-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      STAG_BUCKET: stag.otherparty.ai
      AWS_REGION: sa-east-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # Skip lifecycle scripts (your package.json has "prepare": "npm run build:ssr")
      # to avoid SSR build during install in CI.
      - name: Install dependencies (no scripts)
        run: npm ci --ignore-scripts

      - name: Build (Angular production)
        run: npm run build -- --configuration=production

      - name: Configure AWS credentials (static keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.KEY }}
          aws-secret-access-key: ${{ secrets.SECRET }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Who am I (debug)
        run: aws sts get-caller-identity

      - name: Deploy to Staging
        run: aws s3 sync ./dist/other-party-ui/browser s3://${{ env.STAG_BUCKET }} --delete

  invalidate:
    runs-on: ubuntu-latest
    needs: deploy
    env:
      AWS_REGION: sa-east-1
    steps:
      - name: Configure AWS credentials (static keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.KEY }}
          aws-secret-access-key: ${{ secrets.SECRET }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Invalidate CloudFront - Staging
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E1EA02UAUYUUZV \
            --paths "/*"
